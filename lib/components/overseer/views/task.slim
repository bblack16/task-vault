css:
  .center {
    text-align: center;
  }

- colors = { debug: 'rgb(76, 205, 194)', info: 'rgb(76, 135, 205)', warn: 'rgb(227, 207, 26)', error: 'rgb(249, 137, 4)', fatal: 'rgb(205, 76, 76)', nil => 'rgb(156, 76, 205)'}

- task = TaskVault::Overseer::Server.parent.vault.task(params[:id].to_i)

- if task
  - name = task.name.to_s.empty? ? '<i>Not Named</i>' : task.name
  h1.center.text_3d style='font-size: 400%; font-weight: bold;' == "Task: #{name}"
  h4.center = "ID: #{task.id} - Status: #{task.status}"

  br
  h2.center Settings
  br
  .middle
    table.default
      thead
        tr
          th Setting
          th Value
      tbody
        - task.serialize.each do |k, v|
          tr
            td = k.to_s.title_case.gsub('_',' ')
            td
              -case v
                - when NilClass
                  nil
                - when Array
                  = v.join(', ')
                - when Hash
                  == v.map{ |key, val| "<b>#{key.to_s.title_case.gsub('_',' ')}:</b> #{val}" }.join('<br>')
                - else
                  = v.to_s

  br
  br
  h2.center History
  br
  table.default
    thead
      tr
        th Time
        th Severity
        th Status
        th Run Count
        th Message
    tbody
      - task.history.each do |line|
        tr
          td == line[:time].strftime('%Y-%m-%d %H:%M:%S') + ' <br><i>' + (Time.now - line[:time]).to_duration(stop: :sec) + ' ago</i>' rescue line[:time]
          td
            .badge.white.bold style="background-color: #{colors[line[:severity]]}" = line[:severity]
          td = line[:status]
          td = line[:run_count]
          td = line[:msg]

- else

  h1.center.text_3d style='font-size: 400%; font-weight: bold;' Task

  h3.red = "ERROR: Task #{params[:id]} Not Found!"
